/*
 * This file is generated by jOOQ.
 */
package com.jooq.data.tables.records;


import com.jooq.data.tables.Teacher;
import com.jooq.data.tables.interfaces.ITeacher;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeacherRecord extends UpdatableRecordImpl<TeacherRecord> implements ITeacher {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>school.teacher.id</code>.
     */
    @Override
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>school.teacher.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>school.teacher.name</code>.
     */
    @Override
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>school.teacher.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>school.teacher.age</code>.
     */
    @Override
    public void setAge(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>school.teacher.age</code>.
     */
    @Override
    public Integer getAge() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITeacher from) {
        setId(from.getId());
        setName(from.getName());
        setAge(from.getAge());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends ITeacher> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeacherRecord
     */
    public TeacherRecord() {
        super(Teacher.TEACHER);
    }

    /**
     * Create a detached, initialised TeacherRecord
     */
    public TeacherRecord(Integer id, String name, Integer age) {
        super(Teacher.TEACHER);

        setId(id);
        setName(name);
        setAge(age);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TeacherRecord
     */
    public TeacherRecord(com.jooq.data.tables.pojos.Teacher value) {
        super(Teacher.TEACHER);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setAge(value.getAge());
            resetChangedOnNotNull();
        }
    }
}
